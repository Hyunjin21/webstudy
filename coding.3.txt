생활 코딩 (3주) - WEB2 CSS

WEB - HTML을 이용하여 전자 문서 만들 수 있음 = 정보 표현 가능
불만족 : 글꼴변경, 문자 크기와 색상, 가운데 정렬, 배경이미지 등등

HTML언어의 디자인 관련 새로운 태그 추가 : 쉬운길 but 한계
디자인에 최적화된 완전히 새로운 언어 만들기 : 어렵지만 근본적인 해결책 CSS

    <h1><a href = "index.html"><font color ="red">WEB</font></a></h1>
<a> WEB이라고 하는 정보의 링크라는 것을 설명하는 정보
<h1>WEB이라고 하는 문자가 이 웹페이지에서 제목이다라는 중요한 정보
<font>WEB에 대해서 어떠한 정보도 가지고 있지 않음. 
         다만 빨간색을 표현하는 디자인을 나타낼 뿐(디자인은 중요하지만 디자인 자체가 정보는 아니다)
   
   <h1><a href="index.html"><font color="red">WEB</font></a></h1>
   <ol>
     <li><a href="1.html"><font color="red">HTML</font></a></li>
     <li><a href="2.html"><font color="red">CSS</font></a></li>
     <li><a href="3.html"><font color="red">JavaScript</font></a></li>
   </ol>
 
->Problem. 웹페이지 정보 안에 정보라고 할 수 없는 디자인 코드가 섞이면서 정보로서의 가치가 떨어지는 문제 발생
   +)매일 여러 개의 색으로 바꿔주세요!!

CSS등장 
WEB브라우저는 HTML 언어만 해석해서 처리하는 프로그램 

웹브라우저가 CSS코드를 CSS문법에 따라 해석해야 한다 ->HTML문법으로 이야기


  <style> /*CSS문법에 맞게 처리해라*/
    a {
      color:red;   /*모든 a태그의 색을 red로 - 수십개를 한번에 바꿀 수 있다*/
      text-decoration:none;
    }
    h1 {
      font-size:45px;
      text-align: center;
    }
  </style>
<font> 똑같은 내용 중복 등장 : 웹페이지 사이즈가 커진다. -> CSS 하나의 코드를 통해 중복 제거 - 유지보수 편리, 가독성 높아짐
	1) HTML이 정보에 전념하기 위해 HTML로부터 디자인의 기능을 뺏어온 것이 CSS
	2) CSS를 통해 웹페이지를 디자인하는 것이 HTML을 통해 디자인하는 것보다 훨씬 효율적이기 때문에 CSS언어 도입

속성을 이용하는 방법 style
 : 속성의 값을 웹브라우저는 CSS문법에 따라 해석한 결과를 style속성이 위치하고 있는 이 태그에게 적용 / 약속: 그 값으로 반드시 CSS의 효과가 들어온다
<li><a href="2.html" style="color:red;text-decoration:underline">CSS</a></li> 

문법
    <style> 
        a {               /*selector 선택자 : 이 웹페이지에 있는 모든 a태그를 선택한다*/
          color:black;   /*declaration 선언, 효과 : 선택자가 지정하는 태그들에 대해서 어떠한 효과를 줄 것인가에 대해 해당*/
          text-decoration: none;  /* ; 하나의 선택자에 여러 효과는 세미콜론으로 구분*/
        }                                     /*color : 속성 property, black : 값 property value*/
    </style>

CSS 속성 알아내기 - 어떤 태그인지 단어들 검색
    <style>
        h1 {
           font-size:45px;   /*글씨크기*/
           font-align:center; /*가운데 정렬*/
    </style>

CSS의 기본
1) 효과
2) 선택자

링크의 속성에 따라 색깔 변화 - 파랑 : 방문X, 보라 : 한번 방문 
조건. 모든 링크 기본 : 검은색
        사용자가 방문했던 : 회색 -> 그룹 묶기
        현재 페이지 : 빨간색 -> CSS만

    <style>
        a {
          color:black;
          text-decoration: none;
        }
        .saw{          /*웹페이지에서 모든 class가 saw인 것을 가리키는 선택자*/
          color:gray;
        }
        .active{
          color:red;
        }
    </style>

    <li><a href="1.html" class="saw">HTML</a></li>
    <li><a href="2.html" class="saw active">CSS</a></li> 
/*여러 개의 값 띄어쓰기로 구분 
   = 하나의 태그에 여러 개의 속성  
   = 여러 개의 선택자를 통해 하나의 태그를 공동으로 제어*/

class="saw" 같은 의도에 따라 하나로 그룹화할 때 - saw라는 클래스의 값을 가진 태그 2개(중복)

가까이에 있는(가장 최근) 명령이 더 큰 영향력을 가진다
*태그 선택자 (element) - 포괄적 < class 선택자 < id 선택자 - 구체적 : 값이 단 한번만 등장, 중복X
똑같은 형태라면 가장 마지막에 등장하는 선택자가 우선순위가 높다

ex)
    #active{
      color:red;
    }
    .saw{
      color:gray;
    }
    a {
      color:black;
      text-decoration: none;
    }

<li><a href="2.html" class="saw" id="active">CSS</a></li>

박스모델
  block 화면 전체
  inline 자기 크기
  width 폭
  height 높이
  padding 간격
  margin 테두리 사이 간격


    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <title></title>
        <style>
          /*
          block level elements 화면 전체를 쓰는 태그
          */
          h1{                       /* 테두리 */
            border-width:5px;
            border-color:red;
            boder-style: solid;   /*solid 일반적인선*/
            diplay:inline;   /* 부분 */
          }
          /*
          inline elements 자기 자신의 컨텐트의 부피 만큼 쓴다
          */
          a{
            border-width:5px;
            border-color:red;
            boder-style: solid;
            diplay:block;   /* 전체 */
          }                                 /* display:none; 태그가 안보이게 - display속성의 기본값은 block과 inline */
        </style>      
      </head>
      <body>
        <h1>CSS</h1>
        Cascading Style Sheets (<a href="https://en.wikipedia.org/wiki/Cascading Style Sheets">CSS</a>) is a style sheet language used for describing the presentation of a document written in a markup language such as HTML.
      </body>
    </html>

코드 줄이기
    <style>
      h1, a{                          /* 콤마 선택자를 통해 코드 양을 줄임 */
        border:5px solid red;    /* 순서상관없음 */
        padding:20px;             
        margin:20px;               /* 테두리와 테두리 사이의 간격 */
        diplay:block;
        width:100px;               /* 폭 */
      }
    </style>

개발자 도구 (우클릭)
요소검사 - 어떤 CSS스타일에 영향을 받고 있는지 알 수 있음

    <style>
      h1{
        border-bottom:1px solid gray;   /* 가로줄 긋기 */
        margin:0;                              /* margin 값 없애자!! */
        padding:20px;                        /* 테두리와 떨어트리기 위해 */
      }
      ol{                                         /* black level element여서 오른쪽 끝에 위치 */
        border-right:1px solid gray;
        width:100px;
        margin:0;                             /* 여백없애기 */
        padding:20px;
      }
      body{
        margin:0;              
      }

그리드 : 각 태그의 부피감 알기<style>이용

<div></div> : 디자인의 용도로 쓰는 어떤 의미도 존재하지 않는 태그 - 무색무취의 태그
-기본적으로 black level elememt 화면전체를 쓰기에 줄바꿈
<span></span> : inline element

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title></title>
    <style>
      #grid{                            /* 그리드 쓰기위해, 나란히 놓기 위해 두 개의 태그를 감싸는 부모가 필요 부모 태그에 id값을 준다, 조상이 그리드인 태그를 선택 */
        border:5px solid pink;
        display:grid;                                   /* display 태그가 표시되는 방법을 바꾸는 속성 */
        grid-template-columns: 150px 1fr;     /* 1fr 나머지 공간을 다 쓴다 1fr 1fr / 2fr 1fr 자동으로 조절 */
      } /* columns 가로 rows 세로 */
    /* #grid{
        border: 5px solid pink;
        display:-ms-grid;
        display:grid;
        -ms-grid-columns: 150px 1fr;
        grid-template-columns: 150px 1fr;
      }  */
      div{
        border:5px solid gray;     /* 부피감 명확 */
      }
    </style>
  </head>
  <body>
    <div id="grid">    /* 나란히 놓기, 두 개의 독립적인 태그 묶어주기 - 디자인의 목적만으로 */
      <div>NAVIGATION</div>
      <div>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
    </div>
  </body>
</html>


CSS 코드의 재사용 - 다른 페이지에 전파
태그 카피 -> 각각 코드가 동일한지 확인하는데 어려움
-> style.css 파일 내용을 몰라도 가지고 있는 시각적 기능성을 사용할 수 있음 , 재사용성이 높아짐 , 내부적인 코딩의 원리는 몰라도 사용가능
코드의 양을 줄여 웹페이지 다운 -> 인터넷 사용료를 덜 내는 경제적 효과

개발자 도구 - Networks 내부적으로 어떤 파일들을 웹서버에서 다운로드 받는지를 보여주는 기능

웹페이지 안에 CSS 코드를 내장 : 네트워크적인 측면에서 효율적, 더 적은 트래픽 사용

테크닉 케싱(저장하다)
빠르게 웹페이지를 보여줄 수 있으면서 사용료를 적게 낸다는 효과
별도의 파일로 꺼내서 중복 제거!!
style.css 파일
    body{
      margin:0;
    }
    a {
      color:black;
      text-decoration: none;
    }
    h1 {
      font-size:45px;
      text-align: center;
      border-bottom:1px solid gray;
      margin:0;
      padding:20px;
    }
    ol {
      border-right:1px solid gray;
      width:100px;
      margin:0;
      padding:20px;
    }
    #grid{
      display: grid;
      grid-template-columns: 150px 1fr;
    }
    #grid ol{
      padding-left:33px;
    }
    #grid #article{
      padding-left:25px;
    }
    @media(max-width:800px){           /* 미디어쿼리 - 반응형 디자인 : 화면의 크기에 따라 웹페이지의 각 요소들이 반응해서 동작하게 된다 */
     #grid{                                       /* screen width < 800px : max-width ,  screen width > 800px : min-width 웹페이지 오른쪽 상단에 사이즈 보임(개발자 도구이용)*/ 
       display: block;
     }
      ol{
       border-right:none;
     }
     h1{
       boder-bottom:none;
     }
    }


*선택자
*속성